@page "/bugs/details"
@using Microsoft.EntityFrameworkCore
@using BugZila.Models
@inject IDbContextFactory<BugZila.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@inject SessionService SessionService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage;
@rendermode InteractiveServer

@if(hello == -1)
{
    <h1>Loading ..... </h1>
}
else
{
    <Logout />

    <PageTitle>Bug Details</PageTitle>

    <h2 class="mt-4 text-primary">Bug Details</h2>
    <hr />

    @if (bugs is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="card shadow-sm border-0 mb-4">
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3 fw-bold">Type</dt>
                    <dd class="col-sm-9">@bugs.Type</dd>

                    <dt class="col-sm-3 fw-bold">Status</dt>
                    <dd class="col-sm-9">@bugs.Status</dd>

                    <dt class="col-sm-3 fw-bold">Title</dt>
                    <dd class="col-sm-9">@bugs.Title</dd>

                    <dt class="col-sm-3 fw-bold">Description</dt>
                    <dd class="col-sm-9">@bugs.Description</dd>

                    <dt class="col-sm-3 fw-bold">Deadline</dt>
                    <dd class="col-sm-9">@bugs.Deadline.ToShortDateString()</dd>

                   

                    <dt class="col-sm-3 fw-bold">Creator ID</dt>
                    <dd class="col-sm-9">@bugs.CreatorID</dd>

                    <dt class="col-sm-3 fw-bold">Developer ID</dt>
                    <dd class="col-sm-9">@bugs.DeveloperID</dd>

                    <dt class="col-sm-3 fw-bold">Project ID</dt>
                    <dd class="col-sm-9">@bugs.ProjectID</dd>

                    <dt class="col-sm-3 fw-bold">Screenshot</dt>
                    <dd class="col-sm-9">
                        @if (bugs.Screenshot != null)
                        {
                            <img src="data:image/png;base64,@Convert.ToBase64String(bugs.Screenshot)" class="img-fluid rounded shadow-sm" style="max-height: 300px;" />
                        }
                        else
                        {
                            <span class="text-muted">No screenshot available</span>
                        }
                    </dd>
                </dl>
            </div>
        </div>

        <div class="d-flex justify-content-start gap-2">
            <a class="btn btn-primary" href="@($"/bugs/edit?bugid={bugs.BugID}")">Edit</a>
            <button type="button" class="btn btn-secondary" @onclick="GoBack">Back to List</button>
        </div>
    }
    }
@code {
    int hello = -1;

    
    
    private Bugs? bugs;

    [SupplyParameterFromQuery]
    private int BugID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        GetId();
        using var context = DbFactory.CreateDbContext();
        bugs = await context.Bugs.FirstOrDefaultAsync(m => m.BugID == BugID);

        if (bugs is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
    private async Task GetId()
    {
        hello = await LocalStorage.GetItemAsync<int>("Value");
        if (hello != 1 && hello != -1 && hello != 2)
        {
            NavigationManager.NavigateTo("/sessionfail");
        }
        StateHasChanged();
    }
    private void GoBack()
    {
        if (hello == 0)
        {
            NavigationManager.NavigateTo("/developer");
        }
        else if (hello == 1)
        {
            NavigationManager.NavigateTo("/admin");
        }
        else if (hello == 2)
        {
            NavigationManager.NavigateTo("/qa");
        }

    }
}
