@page "/qa"
@using BugZila.Components.Pages.ProjectUserPages
@using BugZila.Components.Pages.BugsPages
@inject NavigationManager Navigation
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject SessionService SessionService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage;
@if (hello == -1)
{
    <div class="text-center mt-5">
        <div class="spinner-border text-warning" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-3">Loading QA Panel...</p>
    </div>
}
else
{
    <Logout />

    <div class="container mt-4">
        <h1 class="mb-4 text-warning border-bottom pb-2">QA Panel</h1>

        <div class="btn-group mb-4">
            <button class="btn btn-outline-warning" @onclick="SetActiveTab">Add Bug</button>
        </div>

        <div class="card p-4 shadow-sm">
            <BugComp Value="2" AllowedProjectIds="userIds"  />
        </div>
    </div>
}
@code {

    int hello = -1;
    int QaID;
    private List<int> userIds = new();
    protected override async Task OnInitializedAsync()
    {
        GetId();

    }
    private async Task GetId()
    {
        hello = await LocalStorage.GetItemAsync<int>("Value");
        QaID = await LocalStorage.GetItemAsync<int>("Id");
        if (hello != 2 && hello != -1)
        {
            Navigation.NavigateTo("/sessionfail");
        }
        userIds.Add(QaID);
        StateHasChanged();
    }

    private void SetActiveTab()
    {
       
            Navigation.NavigateTo("/bugs/create");
        
    }


}
